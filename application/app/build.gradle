plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.chaquo.python'
    id 'com.google.protobuf' version '0.9.1'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'com.caucapstone.app'
    compileSdk 34

    defaultConfig {
        applicationId "com.caucapstone.app"
        minSdk 26
        targetSdk 34
        versionCode 3
        versionName "0.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // From here for Chaquopy
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }

        python {
            def env = String.valueOf(System.getenv("Python38"))
            buildPython env + "\\python.exe"
            version "3.8"

            pip {
                install "-r", "src/main/python/requirements.txt"
            }
        }
    }

    sourceSets {
        main {
            python.srcDir "src/main/python"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
}

dependencies {
    //implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.core:core-ktx:1.12.0'
    //implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.activity:activity-compose:1.8.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation platform('androidx.compose:compose-bom:2023.03.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    // Icons
    implementation "androidx.compose.material:material-icons-extended"

    // Hilt & Navigation
    implementation "androidx.navigation:navigation-compose:2.7.5"
    //implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0"

    // Proto Datastore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.21.12"

    // Dagger & Hilt

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Room
    // Originally they was version 2.5.0
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    // Coil
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Worker
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // CameraX
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
    implementation "androidx.camera:camera-extensions:$camerax_version"

    // Accompanist
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

kapt {
    correctErrorTypes true
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.11.0'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}